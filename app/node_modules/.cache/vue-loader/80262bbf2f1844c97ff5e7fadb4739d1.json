{"remainingRequest":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Downloads\\project\\app\\src\\views\\medicines\\Search.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\User\\Downloads\\project\\app\\src\\views\\medicines\\Search.vue","mtime":1607026598000},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619785757533},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1619785757509},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\ts-loader\\index.js","mtime":1619785330507},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619785757533},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1619785764623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBNZWRpY2luZSB9IGZyb20gIkAvQHR5cGVzIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKaW1wb3J0IHsgYXBpIH0gZnJvbSAiQC9hcGkiOwoKQENvbXBvbmVudApleHBvcnQgZGVmYXVsdCBjbGFzcyBNZWRpY2luZXNTZWFyY2hWaWV3IGV4dGVuZHMgVnVlIHsKICBsaXN0OiBNZWRpY2luZVtdID0gW107CiAgY291bnQgPSAwOwogIGlzRW5kID0gZmFsc2U7CgogIHB1YmxpYyBhc3luYyBmZXRjaChvZmZzZXQ6IG51bWJlcikgewogICAgY29uc3QgeyBxdWVyeSB9ID0gdGhpcy4kcm91dGUucXVlcnk7CiAgICBjb25zdCB7CiAgICAgIGRhdGE6IHsgcmVzdWx0LCBjb3VudCB9LAogICAgfSA9IGF3YWl0IGFwaS5nZXQoYC9tZWRpY2luZXM/cXVlcnk9JHtxdWVyeX0mb2Zmc2V0PSR7b2Zmc2V0fWApOwogICAgaWYgKHJlc3VsdC5sZW5ndGggPT0gMCkgewogICAgICB0aGlzLmlzRW5kID0gdHJ1ZTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhpcy5saXN0LnB1c2goLi4ucmVzdWx0KTsKICAgIHRoaXMuY291bnQgPSBjb3VudDsKICB9CgogIHB1YmxpYyBwYXJzZVN0YXR1cyhzdGF0dXM6IHN0cmluZykgewogICAgaWYgKHN0YXR1cyA9PSAicmVjaXBlIikgewogICAgICByZXR1cm4gItCf0L4g0YDQtdGG0LXQv9GC0YMiOwogICAgfQogICAgcmV0dXJuICLQkdC10Lcg0YDQtdGG0LXQv9GC0LAiOwogIH0KCiAgcHVibGljIHJvdXRlVG8oaWQ6IG51bWJlcikgewogICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICBuYW1lOiAibWVkaWNpbmUtdmlldyIsCiAgICAgIHBhcmFtczogewogICAgICAgIGlkOiBpZCArICIiLAogICAgICB9LAogICAgfSk7CiAgfQoKICBhc3luYyBjcmVhdGVkKCkgewogICAgYXdhaXQgdGhpcy5mZXRjaCgwKTsKICB9Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views/medicines","sourcesContent":["<template>\n  <div class=\"pb-10\">\n    <p class=\"subtitle\">Найдено {{ count }} препаратов</p>\n    <v-card v-for=\"item in list\" :key=\"item.ID + Math.random()\" class=\"mb-5\">\n      <v-card-title>{{ item.TITLE }}</v-card-title>\n      <v-card-subtitle class=\"primary--text\">{{\n        parseStatus(item.STATUS)\n      }}</v-card-subtitle>\n      <v-card-text class=\"d-flex justify-space-between\">\n        <template v-if=\"item.AVAILABLE\">\n          <div class=\"wrapper d-flex align-center\">\n            <template v-if=\"item.PRICE\">\n              <span class=\"mr-2\">Цена:</span>\n              <v-chip color=\"secondary\">от {{ item.PRICE }}</v-chip>\n            </template>\n          </div>\n          <v-btn @click=\"routeTo(item.ID)\" color=\"#171E54\" text>\n            Где купить\n          </v-btn>\n        </template>\n        <template v-else>\n          В данный момент нет в наличии\n        </template>\n      </v-card-text>\n    </v-card>\n    <v-btn\n      large\n      v-if=\"!isEnd\"\n      color=\"primary\"\n      width=\"100%\"\n      @click=\"fetch(list.length)\"\n    >\n      Загрузить еще\n    </v-btn>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Medicine } from \"@/@types\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { api } from \"@/api\";\n\n@Component\nexport default class MedicinesSearchView extends Vue {\n  list: Medicine[] = [];\n  count = 0;\n  isEnd = false;\n\n  public async fetch(offset: number) {\n    const { query } = this.$route.query;\n    const {\n      data: { result, count },\n    } = await api.get(`/medicines?query=${query}&offset=${offset}`);\n    if (result.length == 0) {\n      this.isEnd = true;\n      return;\n    }\n    this.list.push(...result);\n    this.count = count;\n  }\n\n  public parseStatus(status: string) {\n    if (status == \"recipe\") {\n      return \"По рецепту\";\n    }\n    return \"Без рецепта\";\n  }\n\n  public routeTo(id: number) {\n    this.$router.push({\n      name: \"medicine-view\",\n      params: {\n        id: id + \"\",\n      },\n    });\n  }\n\n  async created() {\n    await this.fetch(0);\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}