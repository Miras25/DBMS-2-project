{"remainingRequest":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\User\\Downloads\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Downloads\\project\\app\\src\\views\\Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"C:\\Users\\User\\Downloads\\project\\app\\src\\views\\Register.vue","mtime":1607041340000},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619785757533},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1619785764623},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619785757533},{"path":"C:\\Users\\User\\Downloads\\project\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1619785764623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}